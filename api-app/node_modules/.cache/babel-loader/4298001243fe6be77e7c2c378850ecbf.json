{"ast":null,"code":"var _jsxFileName = \"/Users/gabritel/Documents/Workspace/Preqin Submission/Investors/api-app/src/Components/InvestorTable.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport https from \"https\";\nfunction InvestorTable() {\n  const investors = [];\n  // let investor: Investor = null;\n  const [data, setData] = useState(investors);\n  // const [investorSelected, setInvestorSelected] = useState(investor);\n\n  async function getInvestors() {\n    const url = \"http://localhost:8000/api/investors\";\n    const httpsAgent = new https.Agent({\n      maxVersion: 'TLSv1.3',\n      minVersion: 'TLSv1.2'\n    });\n    try {\n      const response = await axios.get(url, {\n        httpsAgent: httpsAgent\n      });\n\n      // investors = response.data;\n\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  function selectInvestor(investor) {\n    setInvestorSelected(true);\n  }\n  useEffect(() => {\n    getInvestors();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"InvestorTable\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, \"Data Table\"), /*#__PURE__*/React.createElement(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 25\n    }\n  }, \"Firm ID\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 25\n    }\n  }, \"Firm Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 25\n    }\n  }, \"Firm Type\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 25\n    }\n  }, \"Date Added\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }, \"Address\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }\n  }, data.map((investor, index) => /*#__PURE__*/React.createElement(\"tr\", {\n    key: index,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 29\n    }\n  }, investor.firm_id), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 29\n    }\n  }, investor.firm_name), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 29\n    }\n  }, investor.firm_type), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 29\n    }\n  }, investor.date_added.toLocaleString()), /*#__PURE__*/React.createElement(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 29\n    }\n  }, investor.address))))));\n}\nexport default InvestorTable;","map":{"version":3,"names":["React","useState","useEffect","axios","https","InvestorTable","investors","data","setData","getInvestors","url","httpsAgent","Agent","maxVersion","minVersion","response","get","error","console","selectInvestor","investor","setInvestorSelected","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","map","index","key","firm_id","firm_name","firm_type","date_added","toLocaleString","address"],"sources":["/Users/gabritel/Documents/Workspace/Preqin Submission/Investors/api-app/src/Components/InvestorTable.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport Investor from \"../Entity/Investor\";\nimport axios from \"axios\";\nimport https from \"https\";\n\nfunction InvestorTable() {\n    const investors: Investor[] = [];\n    // let investor: Investor = null;\n    const [data, setData] = useState(investors);\n    // const [investorSelected, setInvestorSelected] = useState(investor);\n\n    async function getInvestors(): Promise<any> {\n        const url = \"http://localhost:8000/api/investors\";\n\n        const httpsAgent = new https.Agent({\n            maxVersion: 'TLSv1.3',\n            minVersion: 'TLSv1.2'\n        });\n\n        try {\n            const response = await axios.get(url, {\n                httpsAgent: httpsAgent\n            });\n\n            // investors = response.data;\n\n            setData(response.data as Investor[]);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    function selectInvestor(investor: Investor): void {\n        setInvestorSelected(true);\n\n    }\n\n    useEffect(() => {\n        getInvestors();\n    }, []);\n    \n    return (\n        <div className=\"InvestorTable\">\n            <h2>Data Table</h2>\n            <table>\n                <thead>\n                    <tr>\n                        <th>Firm ID</th>\n                        <th>Firm Name</th>\n                        <th>Firm Type</th>\n                        <th>Date Added</th>\n                        <th>Address</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {data.map((investor, index) => (\n                        <tr key={index}>\n                            <td>{investor.firm_id}</td>\n                            <td>{investor.firm_name}</td>\n                            <td>{investor.firm_type}</td>\n                            <td>{investor.date_added.toLocaleString()}</td>\n                            <td>{investor.address}</td>\n                        </tr>\n                    ))}\n                </tbody>\n            </table>\n        </div>\n    );\n}\n\nexport default InvestorTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}