{"ast":null,"code":"var _jsxFileName = \"/Users/gabritel/Documents/Workspace/Preqin Submission/Investors/api-app/src/Components/Commitments.tsx\";\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport https from \"https\";\nfunction CommitmentsTable(props) {\n  const [data, setData] = useState([]);\n  async function getCommitments(props) {\n    const url = `http://localhost:8000/api/investor/commitment/${props.asset_class}/${props.investor_id}`;\n    const httpsAgent = new https.Agent({\n      maxVersion: 'TLSv1.3',\n      minVersion: 'TLSv1.2'\n    });\n    try {\n      const response = await axios.get(url, {\n        httpsAgent: httpsAgent\n      });\n      setData(response.data);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  }\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, \"Hello!\"));\n}\nexport default CommitmentsTable;","map":{"version":3,"names":["React","useState","axios","https","CommitmentsTable","props","data","setData","getCommitments","url","asset_class","investor_id","httpsAgent","Agent","maxVersion","minVersion","response","get","error","console","createElement","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber"],"sources":["/Users/gabritel/Documents/Workspace/Preqin Submission/Investors/api-app/src/Components/Commitments.tsx"],"sourcesContent":["import React, { useState }from \"react\";\nimport Investor from \"../Entity/Investor\";\nimport axios from \"axios\";\nimport https from \"https\";\nimport Commitment from \"../Entity/Commitment\";\n\ntype CommitmentsTableProps = {\n    investor_id: number,\n    asset_class: string\n}\n\n\n\nfunction CommitmentsTable(props: CommitmentsTableProps) {\n    const [data, setData] = useState([] as Commitment[]);\n\n    async function getCommitments(props: CommitmentsTableProps): Promise<any> {\n        const url = `http://localhost:8000/api/investor/commitment/${props.asset_class}/${props.investor_id}`;\n    \n        const httpsAgent = new https.Agent({\n            maxVersion: 'TLSv1.3',\n            minVersion: 'TLSv1.2'\n        });\n    \n        try {\n            const response = await axios.get(url, {\n                httpsAgent: httpsAgent\n            });\n    \n            setData(response.data as Investor[]);\n        } catch (error) {\n            console.error('Error:', error);\n        }\n    }\n\n    return(\n        <div>\n            <p>Hello!</p>\n        </div>\n    );\n}\n\nexport default CommitmentsTable;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAO,OAAO;AAEtC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,KAAK,MAAM,OAAO;AAUzB,SAASC,gBAAgBA,CAACC,KAA4B,EAAE;EACpD,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGN,QAAQ,CAAC,EAAkB,CAAC;EAEpD,eAAeO,cAAcA,CAACH,KAA4B,EAAgB;IACtE,MAAMI,GAAG,GAAI,iDAAgDJ,KAAK,CAACK,WAAY,IAAGL,KAAK,CAACM,WAAY,EAAC;IAErG,MAAMC,UAAU,GAAG,IAAIT,KAAK,CAACU,KAAK,CAAC;MAC/BC,UAAU,EAAE,SAAS;MACrBC,UAAU,EAAE;IAChB,CAAC,CAAC;IAEF,IAAI;MACA,MAAMC,QAAQ,GAAG,MAAMd,KAAK,CAACe,GAAG,CAACR,GAAG,EAAE;QAClCG,UAAU,EAAEA;MAChB,CAAC,CAAC;MAEFL,OAAO,CAACS,QAAQ,CAACV,IAAkB,CAAC;IACxC,CAAC,CAAC,OAAOY,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAClC;EACJ;EAEA,oBACIlB,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,gBACI1B,KAAA,CAAAoB,aAAA;IAAAC,MAAA;IAAAC,QAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAA,GAAG,QAAS,CACX,CAAC;AAEd;AAEA,eAAetB,gBAAgB","ignoreList":[]},"metadata":{},"sourceType":"module"}